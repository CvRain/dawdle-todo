@startuml 类图

class Task {
    - id: int
    - title: string
    - description: string
    - due_date: date
    - completed: bool
}

class TaskGroup {
    - id: int
    - tasks: Task[]
    + addTask(task: Task): void
    + removeTask(taskId: int): void
    + markTaskComplete(taskId: int): void
    + markTaskIncomplete(taskId: int): void
}

class CycleGroup {
    - id: int
    - tasks: Task[]
    - currentCycle: int
    + addTask(task: Task): void
    + removeTask(taskId: int): void
    + advanceToNextCycle(): void
}

class DailyPlanGroup {
    - id: int
    - tasks: Task[]
    + addTask(task: Task): void
    + removeTask(taskId: int): void
    + resetTasksCompletion(): void
}

class Todo {
    - taskGroups: TaskGroup[]
    - cycleGroups: CycleGroup[]
    - dailyPlanGroups: DailyPlanGroup[]
    + addTaskGroup(taskGroup: TaskGroup): void
    + addCycleGroup(cycleGroup: CycleGroup): void
    + addDailyPlanGroup(dailyPlanGroup: DailyPlanGroup): void
    + getTotalTaskGroups(): int
}

class GUI {
    + displayTaskGroups(taskGroups: TaskGroup[]): void
    + displayCycleGroups(cycleGroups: CycleGroup[]): void
    + displayDailyPlanGroups(dailyPlanGroups: DailyPlanGroup[]): void
}

class Core {
    + addTaskToGroup(task: Task, groupId: int): void
    + removeTaskFromGroup(taskId: int, groupId: int): void
}

GUI -- Core : 使用
Core --> TaskGroup : 使用
Core --> CycleGroup : 使用
Core --> DailyPlanGroup : 使用
TaskGroup --> Task: 包含
CycleGroup --> Task: 包含
DailyPlanGroup --> Task: 包含

@enduml
